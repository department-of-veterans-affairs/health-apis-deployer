#!/usr/bin/env bash

#
# Wait for the load-balancer to leave it's initialization period for the new rule
# before launching tests against it
#

COLOR=$1

#
# Work around export arrays limitation
#
. $LOAD_BALANCER_RULES


test -n "${#DU_LOAD_BALANCER_RULES[@]}"
test -n "$COLOR"
test -n "$CLUSTER_ID"
test -n "$VPC_NAME"


echo "============================================================"
echo "Waiting for load balancer to be ready."

checkTargetGroupHealth() {
  #
  # Since all the load balancer rules use the same target group, we only need to check one rule.
  #
  for rule in "${DU_LOAD_BALANCER_RULES[@]}"
  do
    load-balancer rule-health --env $VPC_NAME --cluster-id $CLUSTER_ID --color $COLOR --rule-path "$rule"
    [ $? == 0 ] && return 0 # Healthy
    return 1 # No bueno
  done
  # There are no rules, so healthy
  return 0
}

# Give some time for the targets to become healthy before blasting aws with requests
sleep 60 # lol sleeping 60.

timeout=$(($(date +%s) + 600))
while [ $(date +%s) -lt $timeout ]
do
  sleep 30
  checkTargetGroupHealth
  [ $? != 0 ] && continue
  echo "sleeping 60" # lol
  sleep 30
  exit 0
done

echo "$PRODUCT timed out waiting for ($COLOR) load balancer to become healthy" >> $JENKINS_DESCRIPTION
echo "Timeout waiting for load balancer to become healthy"
exit 1
