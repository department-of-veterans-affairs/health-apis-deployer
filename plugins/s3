#!/usr/bin/env bash
set -euo pipefail
. $PLUGIN_LIB

S3_SOURCE_DIR=$DU_DIR/s3
DU_S3_FOLDER_PREFIX="d2-${PRODUCT}-${SHORT_ENVIRONMENT}"
DU_S3_FOLDER="${DU_S3_FOLDER_PREFIX}-${BUILD_NUMBER}"

on-activate() {
  if [ -d "${S3_SOURCE_DIR}" ]; then return $PLUGIN_ENABLED; fi
  return $PLUGIN_DISABLED
}

on-initialize() {
  cat > $PLUGIN_SUBSTITION_DIR/50-s3.conf <<EOF
export DEPLOYMENT_AWS_S3_BUCKET="$DU_AWS_BUCKET_NAME"
export DEPLOYMENT_AWS_S3_FOLDER="$DU_S3_FOLDER"
EOF
}
on-priority() { echo 50; }
on-before-deploy-green() {
  for file in $(find $S3_SOURCE_DIR \
    -name "*.yaml" \
    -or -name "*.yml" \
    -or -name "*.properties" )
  do
    substitute-env rewrite -e $PLUGIN_SUBSTITION_DIR -f $file
  done
}
on-deploy-green() {
  bucket-beaver push-properties \
    --folder-name "$DU_S3_FOLDER" \
    --bucket-name "$DU_AWS_BUCKET_NAME" \
    --du-directory "$DU_DIR"
  echo "$DU_AWS_BUCKET_NAME/$DU_S3_FOLDER is ready"
}

oldFolders() {
  aws s3 ls app-config-storage-qa \
    | awk '/^ *PRE / {print $2}' \
    | grep "${DU_S3_FOLDER_PREFIX}-" \
    | grep -v "$DU_S3_FOLDER"
}

on-after-verify-blue() {
  local old
  old=$(oldFolders)
  if [ -z "${old:-}" ]
  then
    echo "No old S3 folders found"
    return
  fi
  echo "Found old S3 folders: $old"
  for folder in $(oldFolders)
  do
    bucket-beaver clean-up-properties \
      --folder-name "$folder" \
      --bucket-name "$DU_AWS_BUCKET_NAME"
  done
}

# Rollback flow
on-rollback() {
  bucket-beaver clean-up-properties \
    --folder-name "$DU_S3_FOLDER" \
    --bucket-name "$DU_AWS_BUCKET_NAME"
}

main "$@"
exit 1
