#!/usr/bin/env bash
. $PLUGIN_LIB

simulateFailure() {
  if [ "${SIMULATED_FAILURE:-none}" == "${LIFECYCLE}" ]
  then
    banner print -c '✖︎' -m " SIMULATING FAILURE "
    deployment add-build-info -d "Simulated failure on ${LIFECYCLE}"
    cat $WORKSPACE/shanky.txt
    return 1
  fi
  return 0
}
on-activate() {
  if [ "${SIMULATED_FAILURE:-none}" == "none" ]; then return $PLUGIN_DISABLED; fi
  echo "Simulating build failure during ${SIMULATED_FAILURE} lifecycle"
  simulateFailure
  return $PLUGIN_ENABLED
}
on-priority() { echo 999; }
on-initialize() { simulateFailure; }
on-validate() { simulateFailure; }
on-before-deploy-green() { simulateFailure; }
on-deploy-green() { simulateFailure; }
on-verify-green() { simulateFailure; }
on-switch-to-blue() { simulateFailure; }
on-verify-blue() { simulateFailure; }
on-after-verify-blue() { simulateFailure; }
on-finalize() { simulateFailure; }

# Rollback flow
on-before-rollback() { simulateFailure; }
on-rollback() { simulateFailure; }
on-verify-rollback() { simulateFailure; }
on-after-rollback() { simulateFailure; }

main "$@"
exit 1
